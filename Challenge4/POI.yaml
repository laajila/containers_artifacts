apiVersion: apps/v1
kind: Deployment
metadata:
  name: poi-deployment
  namespace: api
  labels:
    app: poi-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poi-deployment
  template:
    metadata:
      labels:
        app: poi-deployment
    spec:
      containers:
      - name: poi-deployment
        image: "registryszc7583.azurecr.io/poi:1.0"
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: 'Production'
        - name: WEB_SERVER_BASE_URI
          value: 'http://0.0.0.0'
        - name: WEB_PORT
          value: '80'
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/secrets"
          readOnly: true
        livenessProbe:
          httpGet:
            path: "api/poi/healthcheck" # hint: there is a healthcheck endpoint - read the README!
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: "api/poi/healthcheck"
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aks-keyvault-team-2"

---
apiVersion: v1
kind: Service
metadata:
  name: poi-service
  namespace: api
spec:
  type: ClusterIP #LoadBalancer
  selector:
    app: poi-deployment
  ports:
    - protocol: TCP
      name: poi-http
      port: 80 # port you hit
      targetPort: 80 # port inside container